/*Multilevel Inheritance and Scholarship Calculation Program in C++*/

#include <iostream>
#include <string> // Include <string> header for using string

using namespace std;

class Product {
protected:
    string name;
    int price;
    int quantity;

public:
    Product() {}

    Product(string Name, int Price, int Quantity) : name(Name), price(Price), quantity(Quantity) {}

    int get_quantity() {
        return quantity;
    }

    virtual void display() {
        cout << "Product name: " << name << ", ";
        cout << "Product price: " << price << ", ";
        cout << "Product quantity: " << quantity << endl;
    }
};

class Electronics : virtual public Product {
public:
    Electronics(string name, int price, int quantity) : Product(name, price, quantity) {}

};

class Clothing : virtual public Product {
public:
    Clothing(string name, int price, int quantity) : Product(name, price, quantity) {}

};

class DiscountProduct : public Electronics, public Clothing {
public:
    DiscountProduct(string name, double price, int quantity) : Product(name, price, quantity), Electronics(name, price, quantity), Clothing(name, price, quantity) {}
};

void displayAvailableProducts(Product* products[], int size) {
    cout << "Available products: " << endl;

    for (int i = 0; i < size; i++) {
        if (products[i]->get_quantity() > 0) {
            products[i]->display();
        }
    }
}

int main() {
    // Create instances of products
    Electronics laptop("Laptop", 999.99, 5);
    Clothing shirt("Shirt", 29.99, 10);
    DiscountProduct specialOffer("Special Offer", 49.99, 3);

    // Store product pointers in an array
    const int numProducts = 3;
    Product* products[numProducts];
    products[0] = &laptop;
    products[1] = &shirt;
    products[2] = &specialOffer;

    // Display available products
    displayAvailableProducts(products, numProducts);

    return 0;
}


#include <stdio.h>
#include <string.h>

typedef struct {
    float sports_marks;
    float maths_marks;
    float phy_marks;
    float chem_marks;
} marks;

typedef struct {
    int id;
    char name[100];
    marks m;
} Student;

float calc_average(marks m1) {
    float sum = 0;
    sum += m1.chem_marks + m1.maths_marks + m1.phy_marks + m1.sports_marks;
    float average = sum / 4;
    return average;
}

float calc_scholarship(marks m) {
    float fees = 150000.0;
    float avg = calc_average(m);
    if (avg > 90) {
        fees *= 0.5;
    } else if (avg >= 80 && avg <= 89) {
        fees *= 0.25;
    } else if (avg >= 70 && avg <= 79) {
        fees *= 0.1;
    } else if (avg >= 60 && avg <= 69) {
        fees *= 0.05;
    } else {
        printf("No scholarship\n");
        return 0; // Return 0 when there's no scholarship
    }
    return fees;
}

void display(marks m, Student s1) {
    printf("\nStudent name: %s ", s1.name);
    printf("\nStudent ID: %d ", s1.id);
    printf("\nStudent average: %f", calc_average(s1.m));
    printf("\nStudent fees after scholarship: %f\n", calc_scholarship(s1.m));
}

int main() {
    Student s1;
    strcpy(s1.name, "dora");
    s1.id = 1236;
    s1.m.maths_marks = 69;
    s1.m.sports_marks = 78;
    s1.m.phy_marks = 87;
    s1.m.chem_marks = 79;
    display(s1.m, s1);
    return 0;
}
